@use 'variables' as *;

@mixin flex-container($direction: row, $justify: center, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

@mixin respond-to($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (min-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    }
    @else {
        @warn "Breakpoint `#{$breakpoint}` not recognized. The available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

$ease-out-back: cubic-bezier(0.34, 1.56, 0.64, 1);

@mixin animation-pressed($scale: 0.95, $duration: 0.25s) {
    @keyframes pressed {
        0% { transform: scale(1); }
        50% { transform: scale($scale); }
        100% { transform: scale(1); }
    }
    will-change: transform;
    animation: pressed $duration ease forwards;
}

@mixin animation-bounce($duration: 2.5s, $repeat: 3) {
    @keyframes bounce {
        0%, 25%, 55%, 85%, 100% { transform: translateY(0); }
        45% { transform: translateY(-8px); }
        70% { transform: translateY(-5px); }
    }
    will-change: transform;
    animation: bounce $duration $repeat $ease-out-back;
}

@mixin animation-rotateUp($duration: 0.5s) {
    @keyframes rotateUp {
        from {
            transform: rotate(0deg) scale(1);
        }
        to {
            transform: rotate(180deg) scale(1.05);
        }
    }
    will-change: transform;
    animation: rotateUp $duration $ease-out-back forwards;
}

@mixin animation-rotateUp90($duration: 0.5s) {
    @keyframes rotateUp90 {
        from {
            transform: rotate(0deg) scale(1);
        }
        to {
            transform: rotate(90deg) scale(1.05);
        }
    }
    will-change: transform;
    animation: rotateUp90 $duration $ease-out-back forwards;
}

@mixin animation-rotateDown($duration: 0.5s) {
    @keyframes rotateDown {
        from {
            transform: rotate(180deg) scale(1.05);
        }
        to {
            transform: rotate(0deg) scale(1);
        }
    }
    will-change: transform;
    animation: rotateDown $duration $ease-out-back forwards;
}

@mixin animation-rotateDown90($duration: 0.5s) {
    @keyframes rotateDown90 {
        from {
            transform: rotate(90deg) scale(1.05);
        }
        to {
            transform: rotate(0deg) scale(1);
        }
    }
    will-change: transform;
    animation: rotateDown90 $duration $ease-out-back forwards;
}

@mixin animation-fadeInLeft($duration: 0.8s, $px: 50px) {
    @keyframes fadeInLeft {
        from {
            opacity: 0;
            transform: translateX(-$px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }
    will-change: transform, opacity;
    animation: fadeInLeft $duration $ease-out-back forwards;
}

@mixin animation-fadeInRight($duration: 0.8s, $px: 50px) {
    @keyframes fadeInRight {
        from {
            opacity: 0;
            transform: translateX($px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }
    will-change: transform, opacity;
    animation: fadeInRight $duration $ease-out-back forwards;
}

@mixin animation-fadeInUp($duration: 0.8s, $px: 50px) {
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY($px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    will-change: transform, opacity;
    animation: fadeInUp $duration $ease-out-back forwards;
}

@mixin animation-continuousPulse($duration: 1.5s) {
    @keyframes continuousPulse {
        0%, 100% {
            box-shadow: 0 0 5px 1px rgba(var(--color-text-r), var(--color-text-g), var(--color-text-b), 0.35), 0 0 9px 1px rgba(var(--color-text-r), var(--color-text-g), var(--color-text-b), 0.15);
            border-color: rgba(var(--color-text-r), var(--color-text-g), var(--color-text-b), 0.55);
        }
        50% {
            box-shadow: 0 0 7px 2px rgba(var(--color-text-r), var(--color-text-g), var(--color-text-b), 0.45), 0 0 11px 3px rgba(var(--color-text-r), var(--color-text-g), var(--color-text-b), 0.2);
            border-color: rgba(var(--color-text-r), var(--color-text-g), var(--color-text-b), 0.65);
        }
    }
    will-change: box-shadow;
    animation: continuousPulse $duration infinite;
}
